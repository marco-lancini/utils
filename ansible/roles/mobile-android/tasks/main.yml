---
# ----------------------------------------------------------------------------------------
# PREPARE
# ----------------------------------------------------------------------------------------
- name: Create directories
  register: dir_done
  file: path="{{ item }}" state=directory
  with_items:
    - '{{ kali_make_dirs|default([]) }}'

# ----------------------------------------------------------------------------------------
# INSTALL
# ----------------------------------------------------------------------------------------
- name: Install Tools via APT
  register: apt_done
  apt: name={{item}} state=present
  sudo: true
  with_items:
    - meld
    - python-protobuf

- name: Install Tools via easy_install
  easy_install: name={{item}}
  with_items:
    - frida
    - protobuf
    - twisted

- name: Install GIT repositories
  register: git_done
  git: repo={{ item.repo }}
    dest={{tools_dir}}/{{ item.dest }}
    accept_hostkey=yes
    version={{ item.version|default(\"master\") }}
    force={{ item.force|default("no") }}
  with_items:
    - '{{ kali_git_repositories|default([]) }}'

- name: Install shortcuts
  copy:
    src: '{{ role_path }}/files/{{ item }}'
    dest: /usr/local/bin/{{ item }}
    mode: a+x
  with_items:
    - mobile-code-checks
    - qark
    - androbugs
    - enjarify
    - oat2dex
    - classyshark
    - jadx-gui
    - jd-gui
    - bytecode-viewer
    - jadx
    - dex2jar

- name: Download binaries
  when: dir_done is success
  register: bin_done
  get_url: url={{ item.url }}
    dest={{ item.dest }}
    mode=a+x
  with_items:
    - '{{ kali_binary|default([]) }}'

- name: Download and extract zipped installs
  when: dir_done is success
  register: tars_done
  unarchive: src={{ item.src }}
    dest={{ item.dest}}
    remote_src=yes
  with_items:
    - '{{ kali_tars|default([]) }}'

# ----------------------------------------------------------------------------------------
# CUSTOM
# ----------------------------------------------------------------------------------------
- name: Install DEB binaries
  when: bin_done is success
  apt: deb="{{item}}"
  with_items:
    - /tmp/jd-gui.deb
    - /tmp/drozer.deb

- name: Build DEX2JAR
  when: git_done is success
  command: chdir="{{ tools_dir }}/dex2jar/" ./gradlew distZip

- name: Build Androguard
  command: chdir="{{ tools_dir }}/androguard/" python setup.py install

- name: BytecodeViewer rename
  when: tars_done is success
  command: mv "{{ tools_dir }}/bytecode-viewer/BytecodeViewer *.jar" "{{ tools_dir }}/bytecode-viewer/bytecode-viewer.jar"

- name: Install platform-tools
  command: /opt/android-sdk/tools/bin/sdkmanager "platform-tools" "platforms;android-26"

- name: Add SignAPK to PATH
  copy:
    src: '{{ item }}'
    dest: '/usr/local/bin/'
    mode: a+x
  with_fileglob:
    - '{{ github_folder }}signapk/bin/signapk*'

# ----------------------------------------------------------------------------------------
# CLEANUP
# ----------------------------------------------------------------------------------------
- name: Clean the system
  script: ../files/cleanup.sh
