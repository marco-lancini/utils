---
# ----------------------------------------------------------------------------------------
# PREPARE
# ----------------------------------------------------------------------------------------
- name: Create directories
  register: dir_done
  file: path="{{ item }}" state=directory
  with_items:
    - '{{ dev_make_dirs|default([]) }}'

# ----------------------------------------------------------------------------------------
# INSTALL
# ----------------------------------------------------------------------------------------
- name: Install Tools via APT
  when: dir_done is success
  register: apt_done
  sudo: true
  apt: name={{ item }} state=present
  with_items:
    - '{{ dev_apt|default([]) }}'

- name: Install Tools via pip
  when: dir_done is success
  register: pip_done
  sudo: true
  pip: name={{ item }}
  with_items:
    - '{{ dev_pip|default([]) }}'

- name: Install Tools via easy_install
  when: pip_done is success
  register: easy_install_done
  sudo: true
  easy_install: name={{ item }}
  with_items:
    - '{{ dev_easy_install|default([]) }}'

- name: Install Tools via gem
  when: easy_install_done is success
  register: gem_done
  sudo: true
  gem: name={{ item.package }}
    state={{ item.state|default("latest") }}
  with_items:
    - '{{ dev_gem|default([]) }}'

- name: Install Tools via go
  when: gem_done is success
  register: go_done
  sudo: true
  shell: go get {{ item }}
  with_items:
    - '{{ dev_go|default([]) }}'

- name: Clone GIT repositories
  when: go_done is success
  register: git_done
  git: repo={{ item.repo }}
    dest={{tools_dir}}/{{ item.dest }}
    accept_hostkey=yes
    version={{ item.version|default(\"master\") }}
    force={{ item.force|default("no") }}
  with_items:
    - '{{ dev_git_repositories|default([]) }}'

- name: Manually build go packages
  when: git_done is success
  command: |
    mkdir -p {{ item.go_folder }}
    mv {{tools_dir}}/{{ item.git_name }} {{ item.go_folder }}
    chdir={{ item.go_folder }} go get
    chdir={{ item.go_folder }} go build
    chdir={{ item.go_folder }} go install
  with_items:
    - '{{ dev_go_build|default([]) }}'

- name: Install shortcuts
  copy:
    src: '{{ role_path }}/files/{{ item }}'
    dest: /usr/local/bin/{{ item }}
    mode: a+x
  with_items:
    - '{{ dev_shortcuts|default([]) }}'

- name: Download binaries
  when: git_done is success
  register: bin_done
  get_url: url={{ item.url }}
    dest={{ item.dest }}
    mode=a+x
  with_items:
    - '{{ dev_binary|default([]) }}'

- name: Install DEB binaries
  when: bin_done is success
  apt: deb="{{item}}"
  sudo: true
  with_items:
    - '{{ dev_deb|default([]) }}'

- name: Download and extract zipped installs
  when: git_done is success
  register: tars_done
  unarchive: src={{ item.src }}
    dest={{ item.dest}}
    remote_src=yes
  with_items:
    - '{{ dev_tars|default([]) }}'

- name: Copy configuration files
  register: copy_config_done
  copy:
    src: '{{ role_path }}/files/{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
    - '{{ dev_config|default([]) }}'

- name: Run bash scripts
  when: git_done is success
  script: ../files/{{ item }}
  with_items:
    - '{{ dev_bash|default([]) }}'

# ----------------------------------------------------------------------------------------
# CUSTOM
# ----------------------------------------------------------------------------------------
- name: Install VSCode Extensions
  when: copy_config_done is success
  command: cat /tmp/extensions | xargs -n 1 code --install-extension

- name: Install Code Server
  when: copy_config_done is success
  command: |
    /opts/vscode-server/code-server-{{ CODE_SERVER_VERSION }}-linux-amd64/bin/code-server /opts/vscode-server/code-server-{{ CODE_SERVER_VERSION }}-linux-amd64/bin/ --cert --bind-addr 127.0.0.1:4063"
