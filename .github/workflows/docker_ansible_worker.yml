name: '[DOCKER IMAGE] Ansible Worker'

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
  push:
    branches:
      - main
    paths:
      - 'docker/ansible-worker/Dockerfile'
      - 'docker/ansible-worker/VERSION'
  pull_request:
    branches:
      - main
    paths:
      - 'docker/ansible-worker/Dockerfile'
      - 'docker/ansible-worker/VERSION'

jobs:
  build:
    runs-on: ubuntu-20.04

    env:
      FOLDER: ${{ github.workspace }}/docker/ansible-worker
      REGISTRY: ghcr.io
      VERSION_FILE: VERSION
      IMAGE_NAME: ansible-worker

    steps:
      - name: ðŸ“‚ Checkout repository
        uses: actions/checkout@v2

      - name: ðŸŽ« Login to GitHub Container Registry
        uses: docker/login-action@v1
        id: login
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `GHCR_TOKEN`
          password: ${{ secrets.GHCR_TOKEN }}

      #
      # Build Image
      #
      - name: ðŸ”¨ Build the image
        id: docker_build
        uses: ./.github/actions/docker-build
        with:
          folder: ${{ env.FOLDER }}
          image_build: ${{ env.IMAGE_NAME }}:build
          image_latest: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest

      #
      # Run Trivy
      #
      - name: ðŸ›¡ Run Trivy vulnerability scanner
        if: github.event_name == 'pull_request'
        id: docker_trivy
        uses: ./.github/actions/docker-trivy
        with:
          image_name: ${{ env.IMAGE_NAME }}:build

      #
      #Â PR Output
      #
      - name: ðŸ“„ Show Build Output
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v4.0.2
        env:
          BUILD: ${{ steps.docker_build.outputs.build_output }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Image: ðŸ“‹ \`${process.env.IMAGE_NAME}\`

            |     | Step        | Result                                       |
            | --- | ----------  | -------------------------------------------- |
            | ðŸŽ«  | **Login**   | \`${{ steps.login.outcome }}\`               |
            | ðŸ“–  | **Build**   | \`${{ steps.docker_build.outcome }}\`               |
            | ðŸ›¡  | **Trivy**   | \`${{ steps.docker_trivy.outcome }}\`               |

            ### Build:

            \`\`\`${process.env.BUILD}
            \`\`\`

            ---

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      #
      # Push image to GCR
      #
      - name: ðŸš€ Push image to GitHub Container Registry
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: docker_push
        uses: ./.github/actions/docker-push-gcr
        with:
          image_local: ${{ env.IMAGE_NAME }}:build
          image_remote: ${{ env.IMAGE_NAME }}
          registry: ${{ env.REGISTRY }}/${{ github.repository_owner }}
          version_file: ${{ env.FOLDER }}/${{ env.VERSION_FILE }}
